#https://github.com/revolunet/create-react-app-circleci/blob/master/.circleci/config.yml
defaults: &defaults
  docker:
    - image: circleci/node:14

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn ci
      - store_test_results:
          path: test-results
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - package.json
            - LICENSE
            - README.md
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
      - run: npm publish

workflows:
  version: 2
  staging:
    # This workflow will only run on 'main' and will not run on tags
    jobs:
      - prepare:
          filters: &filters-staging # the yaml anchor for this filters
            branches:
              only: main
            tags:
              ignore: /.*/
      - test:
          requires:
            - prepare
          filters:
            <<: *filters-staging # this is calling the previously set yaml anchor
      - build:
          requires:
            - test
          filters:
            <<: *filters-staging # this is calling the previously set yaml anchor

  production:
    # This workflow will only run on tags (specifically starting with 'v.') and will not run on branches
    jobs:
      - prepare:
          filters: &filters-production
            branches:
              # ignore any commit on any branch by default
              ignore: /.*/
            tags:
              # only act on version tags
              only: /^v.*/
      - test:
          requires:
            - prepare
          filters:
            <<: *filters-production
      - build:
          requires:
            - test
          filters:
            <<: *filters-production
      - publish:
          requires:
            - build
          filters:
            <<: *filters-production
